var fs = require("fs");
var http = require("http");
var package = require("../package.json");
const request = require("request");
const path = require("path");

class uploadCoveragePlugin {
  constructor(parmas) {
    this.__coverage__ = parmas;
  }
  apply(compiler) {
    if (compiler.hooks) {
      compiler.hooks.done.tap("donePlugin", () => {
        donePlugin(compiler);
      });
    } else {
      compiler.plugin("done", function () {
        donePlugin(compiler);
      });
    }
  }
}

function donePlugin(compiler) {
  console.log(
    "webpack done. Upload coverage data [Version=" + package.version + "]..."
  );
  var filePath = "";
  var uploadHost = "http://scp.epd.i.shopee.io"; // scp.epd.i.test.shopee.io
  var uploadPort = "";
  var uploadApi = "/scp/api/v2/jsc/coverageInfos/init/file";
  if (compiler) {
    for (var i = 0; i < compiler.options.plugins.length; i++) {
      if (
        Object.keys(compiler.options.plugins[i]).indexOf("__coverage__") != -1
      ) {
        var __coverage__ = compiler.options.plugins[i]["__coverage__"];
        if (__coverage__["coveragePath"]) {
          filePath = __coverage__["coveragePath"];
        } else {
          console.error("the coverage data file path is not configured.");
          return;
        }
        if (__coverage__["uploadHost"]) {
          uploadHost = __coverage__["uploadHost"];
        }
        if (__coverage__["uploadPort"]) {
          uploadPort = __coverage__["uploadPort"];
        }
        if (__coverage__["uploadApi"]) {
          uploadApi = __coverage__["uploadApi"];
        }
      }
    }
  }

  var requestData = "";
  if (filePath && fs.existsSync(filePath)) {
    requestData = {
      file: fs.createReadStream(filePath),
    };
  } else {
    console.error("coverage file not exist, path:", filePath);
    return;
  }
  if (!requestData) {
    return;
  }
  uploadCoverage(requestData, uploadHost, uploadPort, uploadApi, filePath);
}

function uploadCoverage(requestData, host, port, api, filePath) {
  let url = host + (port ? ":" + port : "") + api;
  request.post(
    { url: url, formData: requestData },
    function (error, response, body) {
      console.log("coverage data upload to", url);
      if (!error && response.statusCode == 200) {
        console.log(
          "upload coverage statusCode: ",
          response.statusCode,
          ", coverage data upload success."
        );
        try {
          console.log(JSON.parse(body));
        } catch (e) {
          console.log("\nError:", e, "\nBody:", body);
        }
      } else {
        console.error(
          "coverage data upload fail, if you need coverage data, please repackage."
        );
        console.log("Error:", error, "\nBody:", body);
      }
      fs.unlinkSync(filePath);
    }
  );
}

module.exports = uploadCoveragePlugin;
//test
// donePlugin();
